<?php

namespace common\kjlib\ueditor;
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/10/26 0026
 * Time: 上午 9:07
 */

use common\library\helper\Code;
use Qiniu\Auth;
use Qiniu\Storage\UploadManager;
use Yii;
use yii\helpers\ArrayHelper;

class UeditorFun extends \kucha\ueditor\UEditorAction
{

    public function init()
    {
        $_config['imageRoot'] = Yii::getAlias('@backend').'/web';
        $_config['scrawlRoot'] = Yii::getAlias('@backend').'/web';
        $_config['videoRoot'] = Yii::getAlias('@backend').'/web';
        $_config['fileRoot'] = Yii::getAlias('@backend').'/web';
        $_config['imageManagerListPath'] = Yii::getAlias('@backend').'/web/upload/image';
        //load config file
        $this->config = ArrayHelper::merge($_config, $this->config);
        parent::init(); // TODO: Change the autogenerated stub

    }

    public function handleAction()
    {
        $action = Yii::$app->request->get('action');
        switch ($action) {
            case 'config':
                $result = $this->config;
                break;

            /* 上传图片 */
            case 'uploadimage':
                /* 上传涂鸦 */
            case 'uploadscrawl':
                /* 上传视频 */
            case 'uploadvideo':
                /* 上传文件 */
            case 'uploadfile':
                $result = $this->actionUpload();

                if (substr($result['url'], 0, 1) != '/') {
                    $result['url'] = '/' . $result['url'];
                }
                $frontUrl =  Yii::getAlias('@backend').'/web';


                $path = $frontUrl.$result['url'];
                $accessKey = Yii::$app->params['qiniuAccessKey'];
                $secretKey = Yii::$app->params['qiniuSecretKey'];
                // 初始化签权对象
                $auth = new Auth($accessKey, $secretKey);
                $bucket = Yii::$app->params['bucket'];
                // 生成上传Token
                $token = $auth->uploadToken($bucket);
                //构建 UploadManager 对象
                $uploadMgr = new UploadManager();
                //图片名称
                $key = Yii::$app->params['fileUrl']. date('Ymd') . '/' .$result['title'];
                $response = $uploadMgr->putFile($token,$key,$path,null,null,false);
                list($ret,$err) = $response;

                if(empty($err)){//如果上传成功了，则改变图片地址，否则用本地的图片
                    if(isset($ret['key'])){
                        $url = '/'.$ret['key'];
                    }
                }else{
                    $result['title'] = md5(time() . mt_rand(1,1000000)).$result['title'] ;
                    //图片名称
                    $key = Yii::$app->params['fileUrl']. date('Ymd') . '/' .$result['title'];
                    list($ret,$err) = $uploadMgr->putFile($token,$key,$path,null,null,false);
                    if(empty($err)){//如果上传成功了，则改变图片地址，否则用本地的图片
                        if(isset($ret['key'])){
                            $url = '/'.$ret['key'];
                        }
                    }
                }

                unlink($path);

                $result['url'] = Yii::$app->params['imageUrl'] .$url;
                break;
            /* 列出图片 */
            case 'listimage':
                /* 列出文件 */
            case 'listfile':
                $result = $this->actionList();
                break;

            /* 抓取远程文件 */
            case 'catchimage':
                $result = $this->actionCrawler();
                break;

            default:
                $result = [
                    'state' => '请求地址出错'
                ];
                break;
        }
        /* 输出结果 */
        return $result;
    }


    /**
     * 获取已上传的文件列表
     * @return array
     */
    protected function actionList()
    {
        /* 判断类型 */
        switch ($_GET['action']) {
            /* 列出文件 */
            case 'listfile':
                $allowFiles = $this->config['fileManagerAllowFiles'];
                $listSize = $this->config['fileManagerListSize'];
                $path = $this->config['fileManagerListPath'];
                break;
            /* 列出图片 */
            case 'listimage':
            default:
                $allowFiles = $this->config['imageManagerAllowFiles'];
                $listSize = $this->config['imageManagerListSize'];
                $path = $this->config['imageManagerListPath']; //已经配置到了图片保存的路径
        }
        $allowFiles = substr(str_replace(".", "|", join("", $allowFiles)), 1);
        /* 获取参数 */
        $size = isset($_GET['size']) ? htmlspecialchars($_GET['size']) : $listSize;
        $start = isset($_GET['start']) ? htmlspecialchars($_GET['start']) : 0;
        $end = (int)$start + (int)$size;
        /* 获取文件列表 */
//        $path = $_SERVER['DOCUMENT_ROOT'] . (substr($path, 0, 1) == "/" ? "" : "/") . $path;
        $files = $this->getfiles($path, $allowFiles);
        if (!count($files)) {
            return [
                "state" => "no match file",
                "list" => array(),
                "start" => $start,
                "total" => count($files)
            ];
        }

        /* 获取指定范围的列表 */
        $len = count($files);
        for ($i = min($end, $len) - 1, $list = array(); $i < $len && $i >= 0 && $i >= $start; $i--) {
            $list[] = $files[$i];
        }
//倒序
//for ($i = $end, $list = array(); $i < $len && $i < $end; $i++){
//    $list[] = $files[$i];
//}
        /* 返回数据 */
        return [
            "state" => "SUCCESS",
            "list" => $list,
            "start" => $start,
            "total" => count($files)
        ];
    }


    /**
     * 遍历获取目录下的指定类型的文件
     * @param $path
     * @param $allowFiles
     * @param array $files
     * @return array|null
     */
    protected function getfiles($path, $allowFiles, &$files = array())
    {
        if (!is_dir($path)) return null;
        if (substr($path, strlen($path) - 1) != '/') $path .= '/';
        $handle = opendir($path);
        while (false !== ($file = readdir($handle))) {
            if ($file != '.' && $file != '..') {
                $path2 = $path . $file;
                if (is_dir($path2)) {
                    $this->getfiles($path2, $allowFiles, $files);
                } else {
                    if (preg_match("/\.(" . $allowFiles . ")$/i", $file)) {
                        //$path = '/data/www/wxshop.kj800.cn/frontend/web/upload/image/20180409/wxfca90c1adddaf1d6.o6zAJsyAWzRmn_6fNglA.jpg'
                        $url = str_replace( Yii::getAlias('@frontend').'/web/upload/image',Yii::$app->params['frontendUrl'].'/web/upload/image/',$path2);
                        $files[] = array(
                            'url' => $url,
                            'mtime' => filemtime($path2)
                        );
                    }
                }
            }
        }
        return $files;
    }

}